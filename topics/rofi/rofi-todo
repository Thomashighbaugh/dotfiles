#!/usr/bin/env python3

import argparse
import json
from json import JSONDecodeError

from rofi import Rofi

parser = argparse.ArgumentParser()
parser.add_argument(
    "-f", "--file", help="specify path to notes notes file", required=True
)
parser.add_argument(
    "--init", help="clear and initialize notes file", action="store_true"
)
args = parser.parse_args()

titles = []
r = Rofi()


def init_file():
    inote = {"notes": [{"name": "empty", "description": "empty"}]}
    with open(args.file, "w") as f:
        json.dump(inote, f, indent=2)
    print("Note file initialized.")
    r.error("Notes file initialized.")
    exit()


if args.init:
    init_file()


try:
    with open(args.file) as f:
        notes = json.load(f)
except JSONDecodeError:
    print("JSONDecodeError")
    init_file()
except KeyError:
    print("KeyError")
    init_file()


def show_titles():
    for i in range(len(notes["notes"])):
        titles.append(notes["notes"][i]["name"])


try:
    while True:
        titles = []
        show_titles()

        index, key = r.select(
            "Notes",
            titles,
            key1=("Alt+d", " Delete highlighted note "),
            key2=("Alt+a", " Add a new note "),
            rofi_args=["-i", "-no-custom", "-l", "15"],
        )

        if key == 0:
            r.error(notes["notes"][index]["description"])

        elif key == 1:
            del notes["notes"][index]

            with open(args.file, "w") as f:
                json.dump(notes, f, indent=2)

                r.error("Note has been deleted.")

        elif key == 2:
            name = r.text_entry(" Enter note: ", rofi_args=["-l", "0"])

            if name:
                desc = r.text_entry(" Enter additional information:  ", rofi_args=["-l", "0"])
                new_note = {"name": name, "description": desc}
                notes["notes"].append(new_note)

                with open(args.file, "w") as f:
                    json.dump(notes, f, indent=2)

                    r.error(" Note has been added. ")

        else:
            break

except IndexError:
    print("IndexError")
    init_file()
except KeyError:
    print("KeyError")
    init_file()
