
# Autostart
exec mako
exec ~/.azotebg
exec autotiling
exec /usr/lib/kdeconnectd
exec kdeconnect-indicator
exec nm-applet --indicator
exec mpd ~/.config/mpd/mpd.conf
exec_always killall ~/.local/bin/inactive-windows-transparency.py; ~/.local/bin/inactive-windows-transparency.py &
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec mkfifo $SWAYSOCK.wob && tail -f $SWAYSOCK.wob | wob --border-color '#ff5e81ac' --background-color '#cc2e3440' --bar-color '#ff5e81ac'

# Dynamic Wallpaper
# exec oguri -c ~/.config/oguri/config
# exec dwall -s flcl &

# Windows Rules 
for_window [app_id="pavucontrol"] floating enable, sticky enable, resize set width 550 px height 600px, move position cursor, move down 330
for_window [title=".+[Ss]haring (Indicator|your screen)"] floating enable, move to scratchpad
for_window [title="Copying"] floating enable
for_window [title="Authenticate"] resize set height 210px
for_window [title="Discord Updater"] floating enable
for_window [title="File Already Exist"] floating enable

# Repeat delay
input * repeat_delay 300

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#
set $menu wofi -c ~/.config/wofi/config -I 
bindsym $mod+c exec wofer
bindsym $mod+d exec wofi-emoji

# Disable titlebar
default_border pixel 3

# Font
# title_align center
font pango:FuraCode Nerd Font Mono Bold 11px 

set $base00 #1f2023
set $base01 #23262c
set $base02 #313040
set $base03 #555e70
set $base04 #0b0c0f
set $base05 #8b9cbe
set $base06 #b2bfd9
set $base07 #e9efff
set $base08 #ff9cff
set $base09 #796af5
set $base0A #f0ee6e
set $base0B #6c71c4
set $base0C #00eaff
set $base0D #00caff
set $base0E #61aeee
set $base0F #a86fe6

# Window decoration
# class                 border  backgr. text    indicator child_border
client.focused          $base06 $base02 $base06 $base02   $base06
client.focused_inactive $base04 $base04 $base06 $base04   $base04
client.unfocused        $base01 $base01 $base06 $base01   $base01
client.urgent           $base08 $base02 $base06 $base08   $base08
client.placeholder      $base03 $base03 $base07 $base03   $base03

# Window spaces
gaps inner 12
gaps outer 5

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output "*" bg ~/wallpapers/1.jpg fill
# swaybg_command -
#
# Example configuration:
#
  output HDMI-A-I {
    pos 0 0
    res 2560x1440
    adaptive_sync off
    scale 1
  }
  # output HDMI-A-1 resolution 2560x1440 position 0,0 scale
#
# You can get the names of your outputs by running: swaymsg -t get_outputs


# Screenlocking
bindsym $mod+f1 exec ~/.config/sway/lockman.sh
bindsym $mod+f12 exec ~/.config/sway/lockman.sh

# Screenshot with grim and swappy
bindsym print exec grim -g "$(slurp)" - | swappy -f -
bindsym Shift+print exec grim - | swappy -f -



### Input configuration
#
# Example configuration:
#
   input "1267:12377:ELAN1300:00_04F3:3059_Touchpad" {
       dwt enabled
       tap enabled
       natural_scroll enabled
       middle_emulation enabled
   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Launch a terminal
    bindsym $mod+return exec $term

    # Kill focused window
    bindsym $mod+X kill

    # Start your launcher
    bindsym $mod+Space exec $menu

	# Launch File Manager
	# bindsym $mod+d exec thunar
	
    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Power menu
    bindsym $mod+Shift+e exec wlogout -p layer-shell
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Switch to next/previous workspace
    bindsym ctrl+Alt+Right workspace next_on_output
    bindsym ctrl+Alt+$right workspace next_on_output
    bindsym ctrl+Alt+Left workspace prev_on_output
    bindsym ctrl+Alt+$left workspace prev_on_output
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+Home layout stacking
    bindsym $mod+End layout tabbed
    bindsym $mod+Insert layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+m fullscreen
 
    # Toggle the current focus between tiling and floating mode
    bindsym $mod+f floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym shift+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # Back and Forth

	# bindsym $mod+Tab workspace back_and_forth
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad
	
    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym alt+tab scratchpad show
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
    bindsym $mod+alt+Left resize shrink width 20px
    bindsym $mod+alt+Up resize grow height 20px
    bindsym $mod+alt+Down resize shrink height 20px
    bindsym $mod+alt+Right resize grow width 20px

    # Return to default mode
    # bindsym Return mode "default"
    # bindsym Escape mode "default"

# mode resize {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
# }

# bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
   swaybar_command waybar
}

include /etc/sway/config.d/*

# Special keys
# /usr/include/xkbcommon/xkbcommon-keysyms.h
bindsym XF86AudioRaiseVolume exec pamixer -ui 2 && pamixer --get-volume > $SWAYSOCK.wob
bindsym XF86AudioLowerVolume exec pamixer -ud 2 && pamixer --get-volume > $SWAYSOCK.wob
bindsym XF86AudioMute exec pamixer --toggle-mute && ( pamixer --get-mute && echo 0 > $SWAYSOCK.wob ) || pamixer --get-volume > $SWAYSOCK.wob
bindsym XF86MonBrightnessUp exec brightnessctl -c backlight set +1%
bindsym XF86MonBrightnessDown exec brightnessctl -c backlight set 1%-
bindsym XF86KbdBrightnessUp exec brightnessctl -c backlight set +1%
bindsym XF86KbdBrightnessDown exec brightnessctl -c backlight set 1%-
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
